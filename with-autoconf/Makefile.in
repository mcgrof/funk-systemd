include $(CURDIR)/Config.mk

CFLAGS += -I$(CURDIR)/
SHARED_OBJS = funk_shared.o funk_legacy.o

.PHONY: all
all: funk_regular funk_dynamic funk_math

%.o: %.c
	$(CC) $(CFLAGS) $(CFLAGS_$*.o) -c -o $@ $< $(APPEND_CFLAGS)

# Simple dynamic link loader example
funk_math: funk_math.o
	$(CC) $(CFLAGS) -Wall -rdynamic -ldl $^ -o $@

ifeq ($(CONFIG_SYSTEMD_DEV),y)
EXTRA_OBJS  = funk_shared_active.o
EXTRA_OBJS += funk_dynamic_helpers.o
endif

# Systemd library using the dynamic link loader, works on any system
funk_dynamic: $(SHARED_OBJS) $(EXTRA_OBJS) funk_dynamic.o
	$(CC) $(CFLAGS) -Wall -rdynamic -ldl $^ -o $@

# A binary without the dynamic linker requires a bit more overhead on
# the config side, without systemd you can't run the binary
ifeq ($(CONFIG_SYSTEMD_DEV),y)
EXTRA_OBJS  = funk_shared_active.o
EXTRA_OBJS += funk_regular_helpers.o
endif

CFLAGS  += $(SYSTEMD_CFLAGS)
LDFLAGS += $(SYSTEMD_LIBS)

funk_regular: $(SHARED_OBJS) $(EXTRA_OBJS) funk_regular.o
	$(CC) $(CFLAGS) $(LDFLAGS) $^ -Wall -o $@

.PHONY: reload
reload:
	systemctl daemon-reload

.PHONY: install-sockets
install-sockets:
	cp units/*.socket @systemdsystemunitdir@


.PHONY: install
install:
	make install-sockets
	cp funk_regular @BINDIR@
	cp funk_dynamic @BINDIR@
	cp units/funk.service @systemdsystemunitdir@/
	make reload
	make enable

.PHONY: clean
clean:
	rm -f funk_dynamic funk_regular funk_math *.o

.PHONY: maintainer-clean
maintainer-clean:
	-make clean
	-rm -f autom4te.cache configure config.status config.log \
		config.h config.h.in config.h.in~ stamp-h1 \
		build-aux Makefile Config.mk \
		units/*.service units/*.socket

dist-clean:
	-make maintainer-clean


.PHONY: start
start:
	-systemctl start funk_rw.socket
	-systemctl start funk_ro.socket
	-systemctl start funk.service
	-systemctl status funk_rw.socket
	-systemctl status funk_ro.socket
	-systemctl status funk.service

.PHONY: stop
stop:
	-systemctl stop funk.service
	-systemctl stop funk_rw.socket
	-systemctl stop funk_ro.socket
	-systemctl status funk_rw.socket
	-systemctl status funk_ro.socket
	-systemctl status funk.service

.PHONY: restart
restart:
	@-make stop
	@-make start

.PHONY: disable
disable:
	systemctl disable funk.service
	systemctl disable funk_rw.socket
	systemctl disable funk_ro.socket

.PHONY: enable
enable:
	make disable
	systemctl enable funk.service
	systemctl enable funk_rw.socket
	systemctl enable funk_ro.socket
